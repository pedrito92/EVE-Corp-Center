<?php
/**
 * Created by PhpStorm.
 * User: Pierre
 * Date: 22/11/15
 * Time: 16:08
 */

namespace kernel\classes\DB;

use kernel\classes\interfaces\iECCDb;
use PDO;

class ECCPdo extends PDO implements iECCDb{
    private $prefix;
    private $dbh;

    public function __construct ( $dsn, $username, $passwd, $options, $prefix )
    {
        parent::__construct ( $dsn, $username, $passwd, $options );

        $this->prefix = $prefix;
    }

    /**
     * @return mixed
     */
    public function getPrefix ()
    {
        return $this->prefix;
    }



    public function prepare ( $statement, $driver_options = array () )
    {
        $this->dbh = parent::prepare ( $statement, $driver_options ); // TODO: Change the autogenerated stub
    }

    public function bind($param, $value, $type = null){
        if (is_null($type)) {
            switch (true) {
                case is_int($value):
                    $type = PDO::PARAM_INT;
                    break;
                case is_bool($value):
                    $type = PDO::PARAM_BOOL;
                    break;
                case is_null($value):
                    $type = PDO::PARAM_NULL;
                    break;
                default:
                    $type = PDO::PARAM_STR;
            }
        }
        $this->dbh->bindValue($param, $value, $type);
    }

    public function execute(){
        $this->dbh->execute();
    }

    public function fetch($param){
        $this->dbh->fetch($param);
    }

    public function beginTransaction ()
    {
        parent::beginTransaction (); // TODO: Change the autogenerated stub
    }

    public function commit ()
    {
        parent::commit (); // TODO: Change the autogenerated stub
    }

    public function rollBack ()
    {
        parent::rollBack (); // TODO: Change the autogenerated stub
    }

    public function inTransaction ()
    {
        parent::inTransaction (); // TODO: Change the autogenerated stub
    }

    public function exec ( $statement )
    {
        parent::exec ( $statement ); // TODO: Change the autogenerated stub
    }

    public function query ( $statement )
    {
        $this->dbh = new ECCStatement(parent::prepare($statement, array()));
        return $this->dbh;
    }

    public function lastInsertId ( $name = null )
    {
        parent::lastInsertId ( $name ); // TODO: Change the autogenerated stub
    }

    public function errorCode ()
    {
        parent::errorCode (); // TODO: Change the autogenerated stub
    }

    public function errorInfo ()
    {
        parent::errorInfo (); // TODO: Change the autogenerated stub
    }

    public function quote ( $string, $parameter_type = PDO::PARAM_STR )
    {
        parent::quote ( $string, $parameter_type ); // TODO: Change the autogenerated stub
    }

}